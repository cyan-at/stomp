double total_cost;
policy_improvement_.setNoiselessRolloutCosts(
tmp_rollout_cost_[0], total_cost);
ROS_INFO("Noiseless cost = %lf", total_cost);


bool PolicyImprovement::setNoiselessRolloutCosts(
  computeRolloutControlCosts(noiseless_rollout_);
  computeRolloutCumulativeCosts(noiseless_rollout_);
  total_cost = noiseless_rollout_.total_cost_;

##################################################################

bool PolicyImprovement::computeRolloutCumulativeCosts(Rollout& rollout) {
  // set the total costs
  double state_cost = rollout.state_costs_.sum();
  double cost = state_cost;
  for (int d = 0; d < num_dimensions_; ++d) {
    double cc_sum = rollout.control_costs_[d].sum();
    printf("cc_sum[dim = %d] = %.3f\n", d, cc_sum);
    rollout.full_costs_[d] = state_cost + cc_sum;
    cost += cc_sum;
  }
cc_sum[dim = 0] = 0.002
cc_sum[dim = 1] = 0.008
cc_sum[dim = 2] = -nan
cc_sum[dim = 3] = -nan
cc_sum[dim = 4] = -nan
cc_sum[dim = 5] = -nan

those control_costs_ are left to nans, should be set to 0's / properly managed

##################################################################

CovariantMovementPrimitive::computeLinearControlCosts running
    runs only ONCE at the beginning

CovariantMovementPrimitive::computeControlCosts
    is what is running at every iteration

we also know that in the initial_trajectory, parameters_all for dims [2] -> [5] are all 0 / near 0
    so they become nans later on somehow

##################################################################

what does updateParameters values look like?
***
    CovariantMovementPrimitive::updateParameters
    ~~~~~~~~~~~~~~~~~~~ updates[0].row(0)
     4.61442e-05  9.53663e-05   0.00013107  0.000158395  0.000172396  0.000187173  0.000242832  0.000322244  0.000387385  0.000389064   0.00033808  0.000295315  0.000269945  0.000312294  0.000367578  0.000407702  0.000477583  0.000512383  0.000569933  0.000628635  0.000685615  0.000752311  0.000776062  0.000717646  0.000651352  0.000535624  0.000460595  0.000437722   0.00044168  0.000521957  0.000615547  0.000699542  0.000743884  0.000811948  0.000928491   0.00109216   0.00117757   0.00126194   0.00139897   0.00154623   0.00171731   0.00189787   0.00202475   0.00209949    0.0022325   0.00236056   0.00249052   0.00257143   0.00263475   0.00274652   0.00288136    0.0030062   0.00311746   0.00316052   0.00323849   0.00330875   0.00331934   0.00333337   0.00332008   0.00329111   0.00320867    0.0031833   0.00315595   0.00313924   0.00311799    0.0030953   0.00295888   0.00275904   0.00255906   0.00231878   0.00208781   0.00191792   0.00173402   0.00155554   0.00138824   0.00123809    0.0010783  0.000936489  0.000852872  0.000730152  0.000600585  0.000487497  0.000404435  0.000348694  0.000337109  0.000272927  0.000219853  0.000195248  0.000188605  0.000169856  0.000197671  0.000197135  0.000214683    0.0001961  0.000168662  7.64404e-05  4.37693e-06 -1.79524e-05 -1.37203e-05  1.06431e-05
    ~~~~~~~~~~~~~~~~~~~ updates[1].row(0)
    -3.06948e-05  3.71798e-05  0.000157408  0.000263322  0.000257814  0.000260556  0.000131516  2.01882e-05 -2.46297e-05 -5.16468e-05 -6.54094e-05 -0.000101456 -7.30602e-05  2.35254e-05  9.21497e-05  0.000107928  0.000112882  0.000103125  -6.1757e-05 -0.000123584 -0.000135664 -0.000165622 -0.000153274 -9.58012e-05 -0.000137575 -0.000263978 -0.000372888 -0.000428915 -0.000495922  -0.00057423 -0.000676176 -0.000876061  -0.00114707  -0.00149762  -0.00185504  -0.00216836   -0.0023708  -0.00255719  -0.00277889  -0.00303724  -0.00319977  -0.00340956  -0.00363947  -0.00379973  -0.00387459  -0.00386887  -0.00385591  -0.00388426  -0.00390987  -0.00399815  -0.00400949  -0.00410172  -0.00408446  -0.00399385  -0.00385898  -0.00380311  -0.00374036  -0.00371162  -0.00366081  -0.00359534  -0.00361089  -0.00363126  -0.00365587  -0.00364468    -0.003545  -0.00353374  -0.00349247  -0.00345686  -0.00345733   -0.0034625  -0.00335765  -0.00323765  -0.00319402  -0.00310018  -0.00299805   -0.0029708  -0.00292665  -0.00282168  -0.00267109  -0.00246281  -0.00225275  -0.00212975  -0.00199672  -0.00195521  -0.00198499  -0.00207381  -0.00222534  -0.00231189  -0.00232865   -0.0022094     -0.00204  -0.00178695  -0.00151061  -0.00125828  -0.00104153 -0.000836041 -0.000618438 -0.000451407 -0.000263705 -9.58472e-05
    ~~~~~~~~~~~~~~~~~~~ updates[2].row(0)
    -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan
    ~~~~~~~~~~~~~~~~~~~ updates[3].row(0)
    -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan
    ~~~~~~~~~~~~~~~~~~~ updates[4].row(0)
    -7.09464e-05  0.000800531   0.00234433     0.004208   0.00582471   0.00738699    0.0087876    0.0109616    0.0132658    0.0150166    0.0179108    0.0209916    0.0232971    0.0262733    0.0289356    0.0319577    0.0339463    0.0362911    0.0399383    0.0436034    0.0477349    0.0515246    0.0550935    0.0578995     0.061257    0.0629333    0.0656108    0.0679446    0.0699908    0.0720669    0.0749813    0.0773724    0.0788325    0.0786544    0.0776226    0.0761507    0.0739058    0.0712433    0.0678625    0.0638333    0.0591742    0.0549407    0.0509857    0.0469459    0.0416153    0.0370387    0.0323793    0.0271413    0.0220344    0.0171265    0.0123512   0.00719773   0.00375015  0.000278461  -0.00320232  -0.00648118  -0.00971258   -0.0121534   -0.0143931   -0.0169722      -0.0197   -0.0217805    -0.024116    -0.026217   -0.0274131   -0.0277929   -0.0283064   -0.0286975   -0.0293081   -0.0294887    -0.028856   -0.0276219   -0.0252979   -0.0214381   -0.0173412   -0.0125894  -0.00800906   -0.0039956  8.50586e-05   0.00350942    0.0051863    0.0072901   0.00860466   0.00939925     0.009487   0.00970792    0.0101141    0.0100324   0.00995724   0.00967394   0.00869588   0.00775371   0.00771442   0.00715736   0.00531075   0.00385997   0.00180061  0.000313218  7.69902e-05 -0.000334771
    ~~~~~~~~~~~~~~~~~~~ updates[5].row(0)
    -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan -nan
    CovariantMovementPrimitive::computeControlCosts
    &&&&&&&&&&&&&&&&&&&&&&&&&&&&& d = 0
    ================ params_all
    ################ control_costs[d]
    ---------------- control_costs[d]
    &&&&&&&&&&&&&&&&&&&&&&&&&&&&& d = 1
    ================ params_all
    ################ control_costs[d]
    ---------------- control_costs[d]
    &&&&&&&&&&&&&&&&&&&&&&&&&&&&& d = 2
    ================ params_all
    ################ control_costs[d]
    ---------------- control_costs[d]
    &&&&&&&&&&&&&&&&&&&&&&&&&&&&& d = 3
    ================ params_all
    ################ control_costs[d]
    ---------------- control_costs[d]
    &&&&&&&&&&&&&&&&&&&&&&&&&&&&& d = 4
    ================ params_all
    ################ control_costs[d]
    ---------------- control_costs[d]
    &&&&&&&&&&&&&&&&&&&&&&&&&&&&& d = 5
    ================ params_all
    ################ control_costs[d]
    ---------------- control_costs[d]
    CovariantMovementPrimitive::computeControlCosts
    &&&&&&&&&&&&&&&&&&&&&&&&&&&&& d = 0
    ================ params_all
    ################ control_costs[d]
    ---------------- control_costs[d]
    &&&&&&&&&&&&&&&&&&&&&&&&&&&&& d = 1
    ================ params_all
    ################ control_costs[d]
    ---------------- control_costs[d]
    &&&&&&&&&&&&&&&&&&&&&&&&&&&&& d = 2
    ================ params_all
    ################ control_costs[d]
    ---------------- control_costs[d]
    &&&&&&&&&&&&&&&&&&&&&&&&&&&&& d = 3
    ================ params_all
    ################ control_costs[d]
    ---------------- control_costs[d]
    &&&&&&&&&&&&&&&&&&&&&&&&&&&&& d = 4
    ================ params_all
    ################ control_costs[d]
    ---------------- control_costs[d]
    &&&&&&&&&&&&&&&&&&&&&&&&&&&&& d = 5
    ================ params_all
    ################ control_costs[d]
    ---------------- control_costs[d]

as suspected, it is because the updateParameters is filling us with GARBAGE values for dims [2, 3, 5], why not 4?
***
    luck, most of the time it is still garbage
    BLAH

why is computeControlCosts running why more frequently than updateParameters?
***
    STOMP::doUpdate
        policy_improvement_.setRolloutCosts(
            computeRolloutControlCosts();
                for (int r = 0; r < num_rollouts_; ++r) {
                    printf("invoking computeRolloutControlCosts on rollout %d\n", r);
                    computeRolloutControlCosts(rollouts_[r]);
                }

        policy_->updateParameters(

##################################################################

why does the parameter_updates_ become nan?
***
    in PolicyImprovement::computeParameterUpdates
    noise_ and probabilities_ are BOTH nan
    probabilities_ is nan because 

        in PolicyImprovement::computeRolloutProbabilities
        p_sum @ t = 99, -nan
        p_sum is nan
        because

            rollouts_[0].importance_weight_ 1.000, cost_scaling_h_ 10.000, rollouts_[r].cumulative_costs_[d](t) -nan, denom -nan

            .cumulative_costs set in PolicyImprovement::computeRolloutCumulativeCosts
            which is called for each rollout in
                PolicyImprovement::setRolloutCosts

            cumulative cost is a sum of ___Sum(state_cost) for that rollout___ and ___Sum(control_cost)___ for all dimensions___,
            but control_costs for dim[2] is all nans
                state_cost 0.124
                rollout.control_costs_[2]
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    -nan
                    cc_sum[dim = 2] = -nan

                again, control_costs contain nan because
                    ================ params_all before
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                    ================ adding parameters[d]
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25557e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                        1.25558e-316
                    ================ adding noise[d]
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                        -nan
                    ================ params_all
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                        1.25556e-316
                                -nan
                                -nan
                                -nan
                                -nan
                                -nan
                                -nan
                                -nan
                                -nan

turns out nans are the source of the overall nans?
policy_->computeControlCosts(rollout.parameters_, rollout.noise_projected_,
                             control_cost_weight_, rollout.control_costs_);

what touches rollout.noise_projected_ before this?
***
    PolicyImprovement::generateRollouts
    PolicyImprovement::computeProjectedNoise
    PolicyImprovement::computeProjectedNoise
    PolicyImprovement::computeProjectedNoise
    PolicyImprovement::computeProjectedNoise
    PolicyImprovement::computeProjectedNoise
    PolicyImprovement::computeProjectedNoise
    PolicyImprovement::computeProjectedNoise
    PolicyImprovement::computeProjectedNoise

##################################################################

[ INFO] [1577858857.972050881]: d = 2, l1 = 0.000000, l2 = inf, p1 = 0.000000, p2 = -nan

p2 is -nan is the root of all the -nans by way of noise_, noise_projected_, noiseless_cost_, control_cost_, cumuluative_cost_, probabilities_, so parameter_updates, so parameters is -nan
    rollout.noise_projected_[d] = projection_matrix_[d] * rollout.noise_[d];

this is because adapted_stddevs_[d] is 0, so l2 is inf, so p2 = inf / (inf) = -nan

##################################################################

EOD 2019-12-31, solving a problem with n dimensions with valid costs!!!
The key is to have stomp_2fd_test.yaml's noise_stddev, noise_decay, noise_min_stddev set to match
dimensions of num_dimensions and NOT default to 0 values, which cause infs + -nans
#IMPORTANT
***
    [ INFO] [1577861794.990774661]: Noiseless cost = 0.015207
    [ INFO] [1577861795.021061744]: d = 0, l1 = 0.000100, l2 = 20.440289, p1 = 0.000005, p2 = 0.999995
    [ INFO] [1577861795.021275692]: d = 1, l1 = 0.000100, l2 = 14.783712, p1 = 0.000007, p2 = 0.999993
    [ INFO] [1577861795.021450265]: d = 2, l1 = 0.000100, l2 = 11.925140, p1 = 0.000008, p2 = 0.999992
    [ INFO] [1577861795.021721957]: d = 3, l1 = 0.000100, l2 = 12.511529, p1 = 0.000008, p2 = 0.999992
    [ INFO] [1577861795.021999848]: d = 4, l1 = 0.000100, l2 = 11.906081, p1 = 0.000008, p2 = 0.999992
    [ INFO] [1577861795.022173262]: d = 5, l1 = 0.000100, l2 = 11.786419, p1 = 0.000008, p2 = 0.999992
    [ INFO] [1577861795.031333328]: Noiseless cost = 0.015143
    [ INFO] [1577861795.061179098]: d = 0, l1 = 0.000100, l2 = 20.655454, p1 = 0.000005, p2 = 0.999995
    [ INFO] [1577861795.061389575]: d = 1, l1 = 0.000100, l2 = 15.270324, p1 = 0.000007, p2 = 0.999993
    [ INFO] [1577861795.061565996]: d = 2, l1 = 0.000100, l2 = 12.207349, p1 = 0.000008, p2 = 0.999992
    [ INFO] [1577861795.061848043]: d = 3, l1 = 0.000100, l2 = 12.809362, p1 = 0.000008, p2 = 0.999992
    [ INFO] [1577861795.062107442]: d = 4, l1 = 0.000100, l2 = 12.157628, p1 = 0.000008, p2 = 0.999992
    [ INFO] [1577861795.062282462]: d = 5, l1 = 0.000100, l2 = 12.075535, p1 = 0.000008, p2 = 0.999992
    [ INFO] [1577861795.072222747]: Noiseless cost = 0.014878
    [ INFO] [1577861795.101275864]: d = 0, l1 = 0.000100, l2 = 20.840932, p1 = 0.000005, p2 = 0.999995
    [ INFO] [1577861795.101481030]: d = 1, l1 = 0.000100, l2 = 15.469005, p1 = 0.000006, p2 = 0.999994
    [ INFO] [1577861795.101656127]: d = 2, l1 = 0.000100, l2 = 12.446875, p1 = 0.000008, p2 = 0.999992
    [ INFO] [1577861795.101936412]: d = 3, l1 = 0.000100, l2 = 13.184636, p1 = 0.000008, p2 = 0.999992
    [ INFO] [1577861795.102197337]: d = 4, l1 = 0.000100, l2 = 12.345436, p1 = 0.000008, p2 = 0.999992
    [ INFO] [1577861795.102372065]: d = 5, l1 = 0.000100, l2 = 12.403509, p1 = 0.000008, p2 = 0.999992
    [ INFO] [1577861795.111509480]: Noiseless cost = 0.014761

THIS IS ALL BECAUSE OF UNDEFINED BEHAVIOR OF ACCESSING A STD::VECTOR<DOUBLE> BEYOND SIZE UNDER CAPACITY!!!
#IMPORTANT
below is example of this, notice noise[4], noise[5]
***
STOMP::doGenRollouts
noise[0] 0.000
noise[1] 1.000
noise[2] 0.000
noise[3] 0.000
noise[4] 8877084497666411378478986233242825816533924209643460982003477164224051949645580561317513391242927142753554801289741098044419446979365474461966421775412962429870462360160021493881402438042725513784492421265539742791811258141061168959240519890431989776384.000
noise[5] 8791054141071149813714106353263496099788959540177159019226693873029113504584609343137441305120279683273711702633190306479286425141085689374174768234966050831185238655633115683356700596753548251202156872024281766499795316809737718262242938679517352296448.000
[ INFO] [1577863262.932895187]: d = 0, l1 = 0.000100, l2 = 3348.501386, p1 = 0.000000, p2 = 1.000000
[ INFO] [1577863262.933119218]: d = 1, l1 = 0.000100, l2 = 6538.849774, p1 = 0.000000, p2 = 1.000000
[ INFO] [1577863262.933324537]: d = 2, l1 = 0.000100, l2 = -nan, p1 = -nan, p2 = -nan
[ INFO] [1577863262.933527722]: d = 3, l1 = 0.000100, l2 = -nan, p1 = -nan, p2 = -nan
[ INFO] [1577863262.933728553]: d = 4, l1 = 0.000100, l2 = 0.000000, p1 = 1.000000, p2 = 0.000000
[ INFO] [1577863262.934051500]: d = 5, l1 = 0.000100, l2 = 0.000000, p1 = 1.000000, p2 = 0.000000
[ INFO] [1577863262.942813456]: Noiseless cost = -nan


##################################################################

with dim = 2, 500 iterations

[ INFO] [1577862716.495751217]: d = 0, l1 = 0.000100, l2 = 3427.213342, p1 = 0.000000, p2 = 1.000000
[ INFO] [1577862716.496101937]: d = 1, l1 = 0.000100, l2 = 5954.495078, p1 = 0.000000, p2 = 1.000000
[ INFO] [1577862716.502624407]: Noiseless cost = 0.007373
[ INFO] [1577862716.536886298]: d = 0, l1 = 0.000100, l2 = 3457.161983, p1 = 0.000000, p2 = 1.000000
[ INFO] [1577862716.537812936]: d = 1, l1 = 0.000100, l2 = 6046.364647, p1 = 0.000000, p2 = 1.000000
[ INFO] [1577862716.556234447]: Noiseless cost = 0.007371
[ INFO] [1577862716.575866690]: d = 0, l1 = 0.000100, l2 = 3455.293538, p1 = 0.000000, p2 = 1.000000
[ INFO] [1577862716.576162243]: d = 1, l1 = 0.000100, l2 = 6129.217747, p1 = 0.000000, p2 = 1.000000
[ INFO] [1577862716.580944315]: Noiseless cost = 0.007372
[ INFO] [1577862716.616651353]: d = 0, l1 = 0.000100, l2 = 3493.766095, p1 = 0.000000, p2 = 1.000000
[ INFO] [1577862716.617464655]: d = 1, l1 = 0.000100, l2 = 6175.532546, p1 = 0.000000, p2 = 1.000000
[ INFO] [1577862716.633206073]: Noiseless cost = 0.007373

with dim = 6, 0.008, comparable

state_costs are comparable, must be hovering around 0.0

##################################################################

##################################################################

